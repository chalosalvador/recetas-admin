{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nimport _classCallCheck from \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\react-boilerplate-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\react-boilerplate-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\react-boilerplate-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\react-boilerplate-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\react-boilerplate-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\react-boilerplate-master\\\\src\\\\components\\\\ListForm.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { saveChefsData } from '../firebase';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { startSetLoginState } from '../actions/authActions';\nimport { translateMessage } from '../helpers/translateMessage';\n\nvar hasErrors = function hasErrors(fieldsError) {\n  return Object.keys(fieldsError).some(function (field) {\n    return fieldsError[field];\n  });\n};\n\nvar ChefsForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChefsForm, _Component);\n\n  function ChefsForm(props) {\n    var _this;\n\n    _classCallCheck(this, ChefsForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChefsForm).call(this, props));\n    _this.initialState = {\n      Chefname: '',\n      specialism: '',\n      experience: '',\n      job: '',\n      nationality: ''\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n          var Chefname = values.Chefname,\n              specialism = values.specialism,\n              experience = values.experience,\n              job = values.job,\n              nationality = values.nationality;\n          saveChefsData(Chefname, specialism, experience, job, nationality).catch(function (error) {\n            console.log('error', error);\n\n            _message.error(translateMessage(error.code));\n          });\n        }\n\n        ;\n      });\n    };\n\n    _this.state = _this.initialState;\n    return _this;\n  }\n\n  _createClass(ChefsForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // To disabled submit button at the beginning.\n      this.props.form.validateFields();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldsError = _this$props$form.getFieldsError,\n          getFieldError = _this$props$form.getFieldError,\n          isFieldTouched = _this$props$form.isFieldTouched;\n      var _this$props = this.props,\n          formTitle = _this$props.formTitle,\n          buttonText = _this$props.buttonText; // Only show error after a field is touched.\n\n      var ChefnameError = isFieldTouched('Chefname') && getFieldError('Chefname');\n      var specialismError = isFieldTouched('specialism') && getFieldError('specialism');\n      var experienceError = isFieldTouched('experience') && getFieldError('experience');\n      var jobError = isFieldTouched('job') && getFieldError('job');\n      var nationalityError = isFieldTouched('nationality') && getFieldError('nationality');\n      return React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, formTitle), React.createElement(_Form.Item, {\n        validateStatus: ChefnameError ? 'error' : '',\n        help: ChefnameError || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, getFieldDecorator('Chefname', {\n        rules: [{\n          type: 'text',\n          required: true,\n          value: 'Chefname',\n          message: 'Ingresa texto válido'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }),\n        type: \"text\",\n        placeholder: \"Nombre Completos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        validateStatus: specialismError ? 'error' : '',\n        help: specialismError || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, getFieldDecorator('specialism', {\n        rules: [{\n          type: 'text',\n          value: 'specialism',\n          required: true,\n          message: 'Ingresa texto válido'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"text\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }),\n        type: \"text\",\n        placeholder: \"Especialidad\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        validateStatus: experienceError ? 'error' : '',\n        help: experienceError || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, getFieldDecorator('experience', {\n        rules: [{\n          type: 'text',\n          message: 'Ingresa numero de años válidos',\n          required: true,\n          value: 'experience'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"text\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }),\n        type: \"text\",\n        placeholder: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        validateStatus: jobError ? 'error' : '',\n        help: jobError || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, getFieldDecorator('job', {\n        rules: [{\n          type: 'text',\n          message: 'Ingresa texto válido',\n          required: true,\n          value: 'job'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"text\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }),\n        type: \"text\",\n        placeholder: \"Trabajo Actual\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        validateStatus: nationalityError ? 'error' : '',\n        help: nationalityError || '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, getFieldDecorator('nationality', {\n        rules: [{\n          type: 'text',\n          message: 'Ingresa texto válido',\n          required: true,\n          value: 'nationality'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"text\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }),\n        type: \"text\",\n        placeholder: \"Nacionalidad\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }))), React.createElement(_Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"chefs-form-button\",\n        disabled: hasErrors(getFieldsError()),\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \" \", buttonText, \" \")));\n    }\n  }]);\n\n  return ChefsForm;\n}(Component);\n\nexport default compose(withRouter, _Form.create({\n  name: 'chef_form'\n}))(ChefsForm);","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Documents\\react-boilerplate-master\\src\\components\\ListForm.js"],"names":["React","Component","withRouter","saveChefsData","compose","connect","startSetLoginState","translateMessage","hasErrors","fieldsError","Object","keys","some","field","ChefsForm","props","initialState","Chefname","specialism","experience","job","nationality","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","catch","error","code","state","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","formTitle","buttonText","ChefnameError","specialismError","experienceError","jobError","nationalityError","rules","type","required","value","message","color","create","name"],"mappings":";;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAEC,WAAF,EAAmB;AACnC,SAAOC,MAAM,CAACC,IAAP,CAAaF,WAAb,EAA2BG,IAA3B,CAAiC,UAAAC,KAAK;AAAA,WAAIJ,WAAW,CAAEI,KAAF,CAAf;AAAA,GAAtC,CAAP;AACD,CAFD;;IAIMC,S;;;;;AAWJ,qBAAaC,KAAb,EAAqB;AAAA;;AAAA;;AACnB,mFAAOA,KAAP;AADmB,UATrBC,YASqB,GATN;AACbC,MAAAA,QAAQ,EAAE,EADG;AAEbC,MAAAA,UAAU,EAAE,EAFC;AAGbC,MAAAA,UAAU,EAAE,EAHC;AAIbC,MAAAA,GAAG,EAAE,EAJQ;AAKbC,MAAAA,WAAW,EAAC;AALC,KASM;;AAAA,UAUrBC,YAVqB,GAUN,UAAEC,CAAF,EAAS;AACtBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKT,KAAL,CAAWU,IAAX,CAAgBC,cAAhB,CAAgC,UAAEC,GAAF,EAAOC,MAAP,EAAmB;AACjD,YAAI,CAACD,GAAL,EAAW;AACTE,UAAAA,OAAO,CAACC,GAAR,CAAa,2BAAb,EAA0CF,MAA1C;AADS,cAEDX,QAFC,GAEsDW,MAFtD,CAEDX,QAFC;AAAA,cAESC,UAFT,GAEsDU,MAFtD,CAESV,UAFT;AAAA,cAEqBC,UAFrB,GAEsDS,MAFtD,CAEqBT,UAFrB;AAAA,cAEiCC,GAFjC,GAEsDQ,MAFtD,CAEiCR,GAFjC;AAAA,cAEsCC,WAFtC,GAEsDO,MAFtD,CAEsCP,WAFtC;AAKTlB,UAAAA,aAAa,CAACc,QAAD,EAAWC,UAAX,EAAuBC,UAAvB,EAAmCC,GAAnC,EAAwCC,WAAxC,CAAb,CAEGU,KAFH,CAEU,UAAAC,KAAK,EAAI;AACfH,YAAAA,OAAO,CAACC,GAAR,CAAa,OAAb,EAAsBE,KAAtB;;AACA,qBAAQA,KAAR,CAAezB,gBAAgB,CAAEyB,KAAK,CAACC,IAAR,CAA/B;AACD,WALH;AAMD;;AAAA;AACF,OAbD;AAcD,KA1BoB;;AAEnB,UAAKC,KAAL,GAAa,MAAKlB,YAAlB;AAFmB;AAGpB;;;;wCAEmB;AAClB;AACA,WAAKD,KAAL,CAAWU,IAAX,CAAgBC,cAAhB;AACD;;;6BAoBQ;AAAA,6BACsE,KAAKX,KAAL,CAAWU,IADjF;AAAA,UACCU,iBADD,oBACCA,iBADD;AAAA,UACoBC,cADpB,oBACoBA,cADpB;AAAA,UACoCC,aADpC,oBACoCA,aADpC;AAAA,UACmDC,cADnD,oBACmDA,cADnD;AAAA,wBAEyB,KAAKvB,KAF9B;AAAA,UAEAwB,SAFA,eAEAA,SAFA;AAAA,UAEWC,UAFX,eAEWA,UAFX,EAIP;;AACA,UAAMC,aAAa,GAAGH,cAAc,CAAE,UAAF,CAAd,IAAgCD,aAAa,CAAE,UAAF,CAAnE;AACA,UAAMK,eAAe,GAAGJ,cAAc,CAAE,YAAF,CAAd,IAAkCD,aAAa,CAAE,YAAF,CAAvE;AACA,UAAMM,eAAe,GAAGL,cAAc,CAAE,YAAF,CAAd,IAAkCD,aAAa,CAAE,YAAF,CAAvE;AACA,UAAMO,QAAQ,GAAGN,cAAc,CAAE,KAAF,CAAd,IAA2BD,aAAa,CAAE,KAAF,CAAzD;AACA,UAAMQ,gBAAgB,GAAGP,cAAc,CAAE,aAAF,CAAd,IAAmCD,aAAa,CAAE,aAAF,CAAzE;AAGA,aAIE;AAAM,QAAA,QAAQ,EAAG,KAAKf,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKiB,SAAL,CAFJ,EAIE,0BAAM,IAAN;AAAW,QAAA,cAAc,EAAGE,aAAa,GACrC,OADqC,GAErC,EAFJ;AAGW,QAAA,IAAI,EAAGA,aAAa,IAAI,EAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIIN,iBAAiB,CAAE,UAAF,EAAc;AAC/BW,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,IAAI,EAAE,MADR;AAEEC,UAAAA,QAAQ,EAAE,IAFZ;AAGEC,UAAAA,KAAK,EAAE,UAHT;AAIEC,UAAAA,OAAO,EAAE;AAJX,SADK;AADwB,OAAd,CAAjB,CAUA;AAAO,QAAA,MAAM,EAAG;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAG;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;AACW,QAAA,IAAI,EAAC,MADhB;AAEW,QAAA,WAAW,EAAC,kBAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVA,CAJJ,CAJF,EAwBE,0BAAM,IAAN;AAAW,QAAA,cAAc,EAAGT,eAAe,GACvC,OADuC,GAEvC,EAFJ;AAGW,QAAA,IAAI,EAAGA,eAAe,IAAI,EAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIIP,iBAAiB,CAAE,YAAF,EAAgB;AACjCW,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,IAAI,EAAE,MADR;AAEEE,UAAAA,KAAK,EAAE,YAFT;AAGED,UAAAA,QAAQ,EAAE,IAHZ;AAIEE,UAAAA,OAAO,EAAE;AAJX,SADK;AAD0B,OAAhB,CAAjB,CAUA;AAAO,QAAA,MAAM,EAAG;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAG;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;AACW,QAAA,IAAI,EAAC,MADhB;AAEW,QAAA,WAAW,EAAC,cAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVA,CAJJ,CAxBF,EA4CE,0BAAM,IAAN;AAAW,QAAA,cAAc,EAAGR,eAAe,GACvC,OADuC,GAEvC,EAFJ;AAGW,QAAA,IAAI,EAAGA,eAAe,IAAI,EAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIIR,iBAAiB,CAAE,YAAF,EAAgB;AACjCW,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,IAAI,EAAE,MADR;AAEEG,UAAAA,OAAO,EAAE,gCAFX;AAGEF,UAAAA,QAAQ,EAAE,IAHZ;AAIEC,UAAAA,KAAK,EAAE;AAJT,SADK;AAD0B,OAAhB,CAAjB,CAUA;AAAO,QAAA,MAAM,EAAG;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAG;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;AACW,QAAA,IAAI,EAAC,MADhB;AAEW,QAAA,WAAW,EAAC,EAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVA,CAJJ,CA5CF,EAiEE,0BAAM,IAAN;AAAW,QAAA,cAAc,EAAGP,QAAQ,GAChC,OADgC,GAEhC,EAFJ;AAGW,QAAA,IAAI,EAAGA,QAAQ,IAAI,EAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIIT,iBAAiB,CAAE,KAAF,EAAS;AAC1BW,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,IAAI,EAAE,MADR;AAEEG,UAAAA,OAAO,EAAE,sBAFX;AAGEF,UAAAA,QAAQ,EAAE,IAHZ;AAIEC,UAAAA,KAAK,EAAE;AAJT,SADK;AADmB,OAAT,CAAjB,CAUA;AAAO,QAAA,MAAM,EAAG;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAG;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;AACW,QAAA,IAAI,EAAC,MADhB;AAEW,QAAA,WAAW,EAAC,gBAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVA,CAJJ,CAjEF,EAqFE,0BAAM,IAAN;AAAW,QAAA,cAAc,EAAGN,gBAAgB,GACxC,OADwC,GAExC,EAFJ;AAGW,QAAA,IAAI,EAAGA,gBAAgB,IAAI,EAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIIV,iBAAiB,CAAE,aAAF,EAAiB;AAClCW,QAAAA,KAAK,EAAE,CACL;AACEC,UAAAA,IAAI,EAAE,MADR;AAEEG,UAAAA,OAAO,EAAE,sBAFX;AAGEF,UAAAA,QAAQ,EAAE,IAHZ;AAIEC,UAAAA,KAAK,EAAE;AAJT,SADK;AAD2B,OAAjB,CAAjB,CAUA;AAAO,QAAA,MAAM,EAAG;AAAM,UAAA,IAAI,EAAC,MAAX;AAAkB,UAAA,KAAK,EAAG;AAAEE,YAAAA,KAAK,EAAE;AAAT,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB;AACW,QAAA,IAAI,EAAC,MADhB;AAEW,QAAA,WAAW,EAAC,cAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVA,CAJJ,CArFF,EAyGE,0BAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAQ,QAAA,IAAI,EAAC,SAAb;AACQ,QAAA,QAAQ,EAAC,QADjB;AAEQ,QAAA,SAAS,EAAC,mBAFlB;AAGQ,QAAA,QAAQ,EAAG3C,SAAS,CAAE4B,cAAc,EAAhB,CAH5B;AAIQ,QAAA,OAAO,EAAE,KAAKd,YAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAIsCkB,UAJtC,MAFF,CAzGF,CAJF;AAuHD;;;;EA1KqBvC,S;;AA8KxB,eAAeG,OAAO,CAACF,UAAD,EAAa,MAAKkD,MAAL,CAAY;AAACC,EAAAA,IAAI,EAAC;AAAN,CAAZ,CAAb,CAAP,CAAqDvC,SAArD,CAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport { Button, Checkbox, Form, Icon, Input, message } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport { saveChefsData } from '../firebase';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { startSetLoginState } from '../actions/authActions';\nimport { translateMessage } from '../helpers/translateMessage';\n\nconst hasErrors = ( fieldsError ) => {\n  return Object.keys( fieldsError ).some( field => fieldsError[ field ] );\n};\n\nclass ChefsForm extends Component {\n\n  initialState = {\n    Chefname: '',\n    specialism: '',\n    experience: '',\n    job: '', \n    nationality:''\n\n  };\n\n  constructor( props ) {\n    super( props );\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {\n    // To disabled submit button at the beginning.\n    this.props.form.validateFields();\n  }\n\n  handleSubmit = ( e ) => {\n    e.preventDefault();\n    this.props.form.validateFields( ( err, values ) => {\n      if( !err ) {\n        console.log( 'Received values of form: ', values );\n        const { Chefname, specialism, experience, job, nationality } = values;\n\n\n        saveChefsData(Chefname, specialism, experience, job, nationality)\n\n          .catch( error => {\n            console.log( 'error', error );\n            message.error( translateMessage( error.code ) );\n          });\n      };\n    } );\n  };\n\n  render() {\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\n    const {formTitle, buttonText} = this.props;\n\n    // Only show error after a field is touched.\n    const ChefnameError = isFieldTouched( 'Chefname' ) && getFieldError( 'Chefname' );\n    const specialismError = isFieldTouched( 'specialism' ) && getFieldError( 'specialism' );\n    const experienceError = isFieldTouched( 'experience' ) && getFieldError( 'experience' );\n    const jobError = isFieldTouched( 'job' ) && getFieldError( 'job' );\n    const nationalityError = isFieldTouched( 'nationality' ) && getFieldError( 'nationality' );\n\n\n    return (\n\n\n\n      <Form onSubmit={ this.handleSubmit } >\n\n          <h1>{formTitle}</h1>\n      \n        <Form.Item validateStatus={ ChefnameError\n          ? 'error'\n          : '' }\n                   help={ ChefnameError || '' }>\n          { getFieldDecorator( 'Chefname', {\n            rules: [\n              {\n                type: 'text',\n                required: true,\n                value: 'Chefname',\n                message: 'Ingresa texto válido'\n              }\n            ]\n          } )(\n            <Input prefix={ <Icon type='user' style={ { color: 'rgba(0,0,0,.25)' } } /> }\n                       type='text'\n                       placeholder='Nombre Completos' />\n          ) }\n        \n        </Form.Item>\n        <Form.Item validateStatus={ specialismError\n          ? 'error'\n          : '' }\n                   help={ specialismError || '' }>\n          { getFieldDecorator( 'specialism', {\n            rules: [\n              {\n                type: 'text',\n                value: 'specialism',\n                required: true,\n                message: 'Ingresa texto válido'\n              }\n            ]\n          } )(\n            <Input prefix={ <Icon type='text' style={ { color: 'rgba(0,0,0,.25)' } } /> }\n                       type='text'\n                       placeholder='Especialidad' />\n          ) }\n        \n        </Form.Item>\n        <Form.Item validateStatus={ experienceError\n          ? 'error'\n          : '' }\n                   help={ experienceError || '' }>\n          { getFieldDecorator( 'experience', {\n            rules: [\n              {\n                type: 'text',\n                message: 'Ingresa numero de años válidos',\n                required: true,\n                value: 'experience',\n              }\n            ]\n          } )(\n            <Input prefix={ <Icon type='text' style={ { color: 'rgba(0,0,0,.25)' } } /> }\n                       type='text'\n                       placeholder='' />\n          ) }\n\n\n        </Form.Item>\n        <Form.Item validateStatus={ jobError\n          ? 'error'\n          : '' }\n                   help={ jobError || '' }>\n          { getFieldDecorator( 'job', {\n            rules: [\n              {\n                type: 'text',\n                message: 'Ingresa texto válido',\n                required: true,\n                value: 'job',\n              }\n            ]\n          } )(\n            <Input prefix={ <Icon type='text' style={ { color: 'rgba(0,0,0,.25)' } } /> }\n                       type='text'\n                       placeholder='Trabajo Actual' />\n          ) }\n        \n        </Form.Item>\n        <Form.Item validateStatus={ nationalityError\n          ? 'error'\n          : '' }\n                   help={ nationalityError || '' }>\n          { getFieldDecorator( 'nationality', {\n            rules: [\n              {\n                type: 'text',\n                message: 'Ingresa texto válido',\n                required: true,\n                value: 'nationality',\n              }\n            ]\n          } )(\n            <Input prefix={ <Icon type='text' style={ { color: 'rgba(0,0,0,.25)' } } /> }\n                       type='text'\n                       placeholder='Nacionalidad' />\n          ) }\n        \n        </Form.Item>\n        <Form.Item>\n          \n          <Button type='primary'\n                  htmlType='submit'\n                  className='chefs-form-button'\n                  disabled={ hasErrors( getFieldsError() ) }\n                  onClick={this.handleSubmit}> {buttonText} </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\n\nexport default compose(withRouter, Form.create({name:'chef_form'}))(ChefsForm);\n"]},"metadata":{},"sourceType":"module"}